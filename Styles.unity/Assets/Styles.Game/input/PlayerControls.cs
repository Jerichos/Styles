//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Styles.Game/input/PlayerControlls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControlls"",
    ""maps"": [
        {
            ""name"": ""Character"",
            ""id"": ""2973de04-c456-45b7-a6b6-9bf565ae0603"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""8cc47d5e-c36b-4cfb-867d-43732b1fa9b1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""b125c236-007b-4658-902e-f314692855d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory UI"",
                    ""type"": ""Button"",
                    ""id"": ""6ba9381b-05d9-430b-9ef1-13ef3557bf45"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Outfit UI"",
                    ""type"": ""Button"",
                    ""id"": ""38799fa1-4e41-4a31-a944-a5dbdd0f430e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controls UI"",
                    ""type"": ""Button"",
                    ""id"": ""d7337b2c-4ada-44ce-befb-b25f12517992"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainMenu UI"",
                    ""type"": ""Button"",
                    ""id"": ""7b9b884f-26e7-4796-926b-27e0caf9a034"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""a2987e65-3043-43dd-927e-2cd04244b362"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d2dfd7b1-39bf-4aaf-9dbe-ecb9339c6822"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8a17a6d0-711f-4a5d-a90e-ed6ac8e834bc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""21eb8ee6-0fd4-4041-9acb-bd70abd3f659"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9feabb61-12b0-478d-9892-90a1a031abea"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d1ae2fed-b911-4a19-9995-0a9d48920597"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bf59689-84da-4f6e-b758-405d878b37df"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a35eddc-f2cc-445d-8e54-313e10a21518"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Outfit UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a69e0565-c850-44e8-b648-0b9fa1723d3b"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controls UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dcfb7e4d-1a2b-49e0-9ccf-c4ea8b9621ef"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainMenu UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Character
        m_Character = asset.FindActionMap("Character", throwIfNotFound: true);
        m_Character_Move = m_Character.FindAction("Move", throwIfNotFound: true);
        m_Character_Interact = m_Character.FindAction("Interact", throwIfNotFound: true);
        m_Character_InventoryUI = m_Character.FindAction("Inventory UI", throwIfNotFound: true);
        m_Character_OutfitUI = m_Character.FindAction("Outfit UI", throwIfNotFound: true);
        m_Character_ControlsUI = m_Character.FindAction("Controls UI", throwIfNotFound: true);
        m_Character_MainMenuUI = m_Character.FindAction("MainMenu UI", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Character
    private readonly InputActionMap m_Character;
    private ICharacterActions m_CharacterActionsCallbackInterface;
    private readonly InputAction m_Character_Move;
    private readonly InputAction m_Character_Interact;
    private readonly InputAction m_Character_InventoryUI;
    private readonly InputAction m_Character_OutfitUI;
    private readonly InputAction m_Character_ControlsUI;
    private readonly InputAction m_Character_MainMenuUI;
    public struct CharacterActions
    {
        private @PlayerControls m_Wrapper;
        public CharacterActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Character_Move;
        public InputAction @Interact => m_Wrapper.m_Character_Interact;
        public InputAction @InventoryUI => m_Wrapper.m_Character_InventoryUI;
        public InputAction @OutfitUI => m_Wrapper.m_Character_OutfitUI;
        public InputAction @ControlsUI => m_Wrapper.m_Character_ControlsUI;
        public InputAction @MainMenuUI => m_Wrapper.m_Character_MainMenuUI;
        public InputActionMap Get() { return m_Wrapper.m_Character; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterActions set) { return set.Get(); }
        public void SetCallbacks(ICharacterActions instance)
        {
            if (m_Wrapper.m_CharacterActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMove;
                @Interact.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnInteract;
                @InventoryUI.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnInventoryUI;
                @InventoryUI.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnInventoryUI;
                @InventoryUI.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnInventoryUI;
                @OutfitUI.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnOutfitUI;
                @OutfitUI.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnOutfitUI;
                @OutfitUI.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnOutfitUI;
                @ControlsUI.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnControlsUI;
                @ControlsUI.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnControlsUI;
                @ControlsUI.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnControlsUI;
                @MainMenuUI.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMainMenuUI;
                @MainMenuUI.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMainMenuUI;
                @MainMenuUI.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMainMenuUI;
            }
            m_Wrapper.m_CharacterActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @InventoryUI.started += instance.OnInventoryUI;
                @InventoryUI.performed += instance.OnInventoryUI;
                @InventoryUI.canceled += instance.OnInventoryUI;
                @OutfitUI.started += instance.OnOutfitUI;
                @OutfitUI.performed += instance.OnOutfitUI;
                @OutfitUI.canceled += instance.OnOutfitUI;
                @ControlsUI.started += instance.OnControlsUI;
                @ControlsUI.performed += instance.OnControlsUI;
                @ControlsUI.canceled += instance.OnControlsUI;
                @MainMenuUI.started += instance.OnMainMenuUI;
                @MainMenuUI.performed += instance.OnMainMenuUI;
                @MainMenuUI.canceled += instance.OnMainMenuUI;
            }
        }
    }
    public CharacterActions @Character => new CharacterActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    public interface ICharacterActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnInventoryUI(InputAction.CallbackContext context);
        void OnOutfitUI(InputAction.CallbackContext context);
        void OnControlsUI(InputAction.CallbackContext context);
        void OnMainMenuUI(InputAction.CallbackContext context);
    }
}
